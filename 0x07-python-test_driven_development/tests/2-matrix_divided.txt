""" function that divides all elements of a matrix. """

""" Import function """
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

""" S U C C E S S  C A S E S """

>>> matrix = [[1, 2, 3], [6, 9, 12]]
>>> matrix_divided(matrix, 5)
[[0.2, 0.4, 0.6], [1.2, 1.8, 2.4]]

>>> matrix = [[12, 2, 5], [9, 9, 0]]
>>> matrix_divided(matrix, 4)
[[3.0, 0.5, 1.25], [2.25, 2.25, 0.0]]

>>> matrix = [[1.2, 2.5, 3.45], [6, 9, 12]]
>>> matrix_divided(matrix, 3)
[[0.4, 0.83, 1.15], [2.0, 3.0, 4.0]]

>>> matrix = [[2.2, 3.65, 3.43], [6.33, 9.77, 12.44]]
>>> matrix_divided(matrix, 6)
[[0.37, 0.61, 0.57], [1.05, 1.63, 2.07]]

>>> matrix = [[2.2, 3.65, 3.43], [6.33, 9.77, 12]]
>>> matrix_divided(matrix, 6)
[[0.37, 0.61, 0.57], [1.05, 1.63, 2.0]]

>>> matrix = [[0, 3.65, 3], [0.0, 9.77, 12.44]]
>>> matrix_divided(matrix, 4)
[[0.0, 0.91, 0.75], [0.0, 2.44, 3.11]]

>>> matrix = [[0, 0, 0], [0, 0, 0]]
>>> matrix_divided(matrix, 5)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix = [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> matrix_divided(matrix, 5)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix = [[0.15, 0.2, 0.9], [0.98, 0.12, 0.34]]
>>> matrix_divided(matrix, 2)
[[0.07, 0.1, 0.45], [0.49, 0.06, 0.17]]

>>> matrix = [[-1.15, -2.2, 0.9], [0.98, 0.12, 0.34]]
>>> matrix_divided(matrix, 2)
[[-0.57, -1.1, 0.45], [0.49, 0.06, 0.17]]


""" F A I L U R E   C A S E S """

>>> matrix = [[1, 2, 'a'], [6, 9, 12]]
>>> matrix_divided(matrix, 5)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, "hello"], ["moto", 9, 12]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 4, 5], [2, 9, 12]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 2, (2, 5)], [2, 3, 9, 12]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 2], ["moto", 9, 12]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 2], [2, 9, 12]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix = [[1, 2, 4, 5], [2, 9, 12]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[2, 3, 5], []]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[], []]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [(1, 2, 3), []]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[0, 0, 0], [0, 0, 0]]
>>> matrix_divided(matrix, 'hello')
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix = [[0, 0, 0], [0, 0, 0]]
>>> matrix_divided(matrix, [])
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix = [[0, 0, 0], [0, 0, 0]]
>>> matrix_divided(matrix, ':)')
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix = []
>>> matrix_divided(matrix, 9)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = None
>>> matrix_divided(matrix, 9)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = 'hello'
>>> matrix_divided(matrix, 9)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 3]]
>>> matrix_divided(matrix)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
